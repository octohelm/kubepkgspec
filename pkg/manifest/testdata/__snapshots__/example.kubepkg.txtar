-- default.Namespace.yaml --
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: default
spec: {}
status: {}
-- demo.default.ConfigMap.yaml --
apiVersion: v1
data:
  X: x
kind: ConfigMap
metadata:
  annotations:
    digest.configmap.octohelm.tech/demo: sha256:b7cd93ed3ee6375b5d4fe8602512e2bd1d85729f0f98f62f0f0cdb322a62dd56
  creationTimestamp: null
  name: demo
  namespace: default
-- demo-html.default.ConfigMap.yaml --
apiVersion: v1
data:
  index.html: <div>hello</div>
kind: ConfigMap
metadata:
  annotations:
    digest.configmap.octohelm.tech/demo-html: sha256:6507926d60a024b477a9e34419a78ab284a0ca528d8434851825632545214ece
  creationTimestamp: null
  name: demo-html
  namespace: default
-- endpoint-demo.default.ConfigMap.yaml --
apiVersion: v1
data:
  default: http://demo
  internal: https://demo---default.internal
  public: https://demo---default.public
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: endpoint-demo
  namespace: default
-- demo.default.Service.yaml --
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: demo
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: demo
status:
  loadBalancer: {}
-- demo.default.Deployment.yaml --
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: demo
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo
  strategy: {}
  template:
    metadata:
      annotations:
        digest.configmap.octohelm.tech/demo: sha256:b7cd93ed3ee6375b5d4fe8602512e2bd1d85729f0f98f62f0f0cdb322a62dd56
        digest.configmap.octohelm.tech/demo-html: sha256:6507926d60a024b477a9e34419a78ab284a0ca528d8434851825632545214ece
        reload.octohelm.tech/configmap: demo,demo-html
      creationTimestamp: null
      labels:
        app: demo
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
      containers:
      - envFrom:
        - configMapRef:
            name: demo
        image: docker.io/library/nginx:1.25.0-alpine
        imagePullPolicy: IfNotPresent
        name: web
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: demo-html
      volumes:
      - configMap:
          name: demo-html
        name: demo-html
status: {}
-- demo.default.Ingress.yaml --
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  creationTimestamp: null
  name: demo
  namespace: default
spec:
  rules:
  - host: demo---default.internal
    http:
      paths:
      - backend:
          service:
            name: demo
            port:
              name: http
        path: /
        pathType: ImplementationSpecific
status:
  loadBalancer: {}
