-- default.Namespace.yaml --
apiVersion: v1
kind: Namespace
metadata:
  name: default
-- demo.default.ConfigMap.yaml --
apiVersion: v1
data:
  X: x
kind: ConfigMap
metadata:
  annotations:
    spec/digest: sha256:9b7cca89595dc25c3ead51b6fedc30ece1f333f853899d019560739743cb9462
  labels:
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: 0.0.2
  name: demo
  namespace: default
-- demo-html.default.ConfigMap.yaml --
apiVersion: v1
data:
  index.html: <div>hello</div>
kind: ConfigMap
metadata:
  annotations:
    spec/digest: sha256:168120a737f7a27ee31b64540c76a2fea10653f3ec2938b0c2bbb0380d0447c2
  labels:
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: 0.0.2
  name: demo-html
  namespace: default
-- demo.default.Service.yaml --
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: 0.0.2
  name: demo
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: demo
-- demo.default.Deployment.yaml --
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: 0.0.2
  name: demo
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo
  template:
    metadata:
      annotations:
        configmap.reloader.octohelm.tech/reload: demo,demo-html
        digest.configmap.reloader.octohelm.tech/demo: sha256:9b7cca89595dc25c3ead51b6fedc30ece1f333f853899d019560739743cb9462
        digest.configmap.reloader.octohelm.tech/demo-html: sha256:168120a737f7a27ee31b64540c76a2fea10653f3ec2938b0c2bbb0380d0447c2
      labels:
        app: demo
        app.kubernetes.io/instance: demo
        app.kubernetes.io/version: 0.0.2
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
      containers:
      - envFrom:
        - configMapRef:
            name: demo
        image: docker.io/library/nginx:1.25.0-alpine
        imagePullPolicy: IfNotPresent
        name: web
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: demo-html
      volumes:
      - configMap:
          name: demo-html
        name: demo-html
-- demo.default.HTTPRoute.yaml --
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  labels:
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: 0.0.2
  name: demo
  namespace: default
spec:
  parentRefs:
  - name: internal
    namespace: network-system
  rules:
  - backendRefs:
    - name: demo
      port: 80
    matches:
    - path:
        type: PathPrefix
        value: /
status:
  parents: []
